extend type Appointment {
  """
  ✨ Implicit primary key field. It's a UUID column default to a generated new value. See `@table` for how to customize it.
  """
  id: UUID! @default(expr: "uuidV4()") @fdc_generated(from: "Appointment", purpose: IMPLICIT_KEY_FIELD)
  """
  ✨ Implicit foreign key field based on `Appointment`.`doctor`. It must match the value of `Doctor`.`id`. See `@ref` for how to customize it.
  """
  doctorId: UUID! @fdc_generated(from: "Appointment.doctor", purpose: IMPLICIT_REF_FIELD)
  """
  ✨ Implicit foreign key field based on `Appointment`.`patient`. It must match the value of `Patient`.`id`. See `@ref` for how to customize it.
  """
  patientId: UUID! @fdc_generated(from: "Appointment.patient", purpose: IMPLICIT_REF_FIELD)
}
extend type Doctor {
  """
  ✨ Implicit primary key field. It's a UUID column default to a generated new value. See `@table` for how to customize it.
  """
  id: UUID! @default(expr: "uuidV4()") @fdc_generated(from: "Doctor", purpose: IMPLICIT_KEY_FIELD)
  """
  ✨ Implicit foreign key field based on `Doctor`.`user`. It must match the value of `User`.`id`. See `@ref` for how to customize it.
  """
  userId: UUID! @fdc_generated(from: "Doctor.user", purpose: IMPLICIT_REF_FIELD)
}
extend type MedicalRecord {
  """
  ✨ Implicit primary key field. It's a UUID column default to a generated new value. See `@table` for how to customize it.
  """
  id: UUID! @default(expr: "uuidV4()") @fdc_generated(from: "MedicalRecord", purpose: IMPLICIT_KEY_FIELD)
  """
  ✨ Implicit foreign key field based on `MedicalRecord`.`associatedAppointment`. It must match the value of `Appointment`.`id`. See `@ref` for how to customize it.
  """
  associatedAppointmentId: UUID @fdc_generated(from: "MedicalRecord.associatedAppointment", purpose: IMPLICIT_REF_FIELD)
  """
  ✨ Implicit foreign key field based on `MedicalRecord`.`patient`. It must match the value of `Patient`.`id`. See `@ref` for how to customize it.
  """
  patientId: UUID! @fdc_generated(from: "MedicalRecord.patient", purpose: IMPLICIT_REF_FIELD)
}
extend type Patient {
  """
  ✨ Implicit primary key field. It's a UUID column default to a generated new value. See `@table` for how to customize it.
  """
  id: UUID! @default(expr: "uuidV4()") @fdc_generated(from: "Patient", purpose: IMPLICIT_KEY_FIELD)
  """
  ✨ Implicit foreign key field based on `Patient`.`user`. It must match the value of `User`.`id`. See `@ref` for how to customize it.
  """
  userId: UUID! @fdc_generated(from: "Patient.user", purpose: IMPLICIT_REF_FIELD)
}
extend type Review {
  """
  ✨ Implicit primary key field. It's a UUID column default to a generated new value. See `@table` for how to customize it.
  """
  id: UUID! @default(expr: "uuidV4()") @fdc_generated(from: "Review", purpose: IMPLICIT_KEY_FIELD)
  """
  ✨ Implicit foreign key field based on `Review`.`doctor`. It must match the value of `Doctor`.`id`. See `@ref` for how to customize it.
  """
  doctorId: UUID! @fdc_generated(from: "Review.doctor", purpose: IMPLICIT_REF_FIELD)
  """
  ✨ Implicit foreign key field based on `Review`.`patient`. It must match the value of `Patient`.`id`. See `@ref` for how to customize it.
  """
  patientId: UUID! @fdc_generated(from: "Review.patient", purpose: IMPLICIT_REF_FIELD)
}
extend type User {
  """
  ✨ Implicit primary key field. It's a UUID column default to a generated new value. See `@table` for how to customize it.
  """
  id: UUID! @default(expr: "uuidV4()") @fdc_generated(from: "User", purpose: IMPLICIT_KEY_FIELD)
}
